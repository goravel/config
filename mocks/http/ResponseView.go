// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "github.com/goravel/framework/contracts/http"
	mock "github.com/stretchr/testify/mock"
)

// ResponseView is an autogenerated mock type for the ResponseView type
type ResponseView struct {
	mock.Mock
}

// First provides a mock function with given fields: views, data
func (_m *ResponseView) First(views []string, data ...interface{}) http.Response {
	var _ca []interface{}
	_ca = append(_ca, views)
	_ca = append(_ca, data...)
	ret := _m.Called(_ca...)

	var r0 http.Response
	if rf, ok := ret.Get(0).(func([]string, ...interface{}) http.Response); ok {
		r0 = rf(views, data...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Response)
		}
	}

	return r0
}

// Make provides a mock function with given fields: view, data
func (_m *ResponseView) Make(view string, data ...interface{}) http.Response {
	var _ca []interface{}
	_ca = append(_ca, view)
	_ca = append(_ca, data...)
	ret := _m.Called(_ca...)

	var r0 http.Response
	if rf, ok := ret.Get(0).(func(string, ...interface{}) http.Response); ok {
		r0 = rf(view, data...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Response)
		}
	}

	return r0
}
