// Code generated by mockery v2.19.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Crypt is an autogenerated mock type for the Crypt type
type Crypt struct {
	mock.Mock
}

// DecryptString provides a mock function with given fields: iv, ciphertext
func (_m *Crypt) DecryptString(iv string, ciphertext string) string {
	ret := _m.Called(iv, ciphertext)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(iv, ciphertext)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// EncryptString provides a mock function with given fields: value
func (_m *Crypt) EncryptString(value string) (string, string) {
	ret := _m.Called(value)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(value)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(string) string); ok {
		r1 = rf(value)
	} else {
		r1 = ret.Get(1).(string)
	}

	return r0, r1
}

type mockConstructorTestingTNewCrypt interface {
	mock.TestingT
	Cleanup(func())
}

// NewCrypt creates a new instance of Crypt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCrypt(t mockConstructorTestingTNewCrypt) *Crypt {
	mock := &Crypt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
